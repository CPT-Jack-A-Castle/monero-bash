#!/usr/bin/env bash
# tar + gpg backups

backup_Wallets()
{
	if [[ -f "$dotMoneroBash/backup.tar" ]]; then
		print_Error_Exit "$dotMoneroBash/backup.tar already exists!"
	elif [[ -f "$dotMoneroBash/backup.tar.gpg" ]]; then
		print_Error_Exit "$dotMoneroBash/backup.tar.gpg already exists!"
	fi
	$bblue; echo "Backing up wallets..."
	cd "$dotMoneroBash"
	cp -r "wallets" "backup"
	tar -cz "backup" &>/dev/null | gpg -c --no-symkey-cache --cipher-algo AES256 -o "backup.tar.gpg" &>/dev/null
	error_Exit "GPG error"
	rm -r "backup"
	$bwhite; echo -n "Cipher algo: " ;$white; echo "AES256"
	$bwhite; echo -n "Key type: " ;$white; echo "Passphrase"
	$bwhite; echo -n "Encrypted wallet tar: " ;$white; echo "$dotMoneroBash/backup.tar.gpg"
	$bwhite; echo -n "To decrypt: " ;$bred; echo -n "monero-bash decrypt"
	$bwhite; echo -n " OR " ;$bred; echo "gpg -d wallets.tar.gpg | tar -xzf -"
}

backup_Decrypt()
{
	[[ -d "$dotMoneroBash/backup" ]]&& print_Error_Exit "$dotMoneroBash/backup already exists, please move!"
	[[ ! -f "$dotMoneroBash/backup.tar.gpg" ]]&& print_Error_Exit "$dotMoneroBash/backup.tar.gpg was not found!"
	$bblue; echo "Decrypting backup..."
	cd "$dotMoneroBash"
	gpg -d backup.tar.gpg | tar -xz
	error_Exit "Decrypt failed"
	$bwhite; echo -n "Decrypted backup: " ;$white; echo "$dotMoneroBash/backup"
}
